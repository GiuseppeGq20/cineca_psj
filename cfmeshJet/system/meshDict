/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                |
| \\      /  F ield         | cfMesh: A library for mesh generation          |
|  \\    /   O peration     |                                                |
|   \\  /    A nd           | Author: Franjo Juretic                         |
|    \\/     M anipulation  | E-mail: franjo.juretic@c-fields.com            |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version   2.0;
    format    ascii;
    class     dictionary;
    location  "system";
    object    meshDict;
}

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

surfaceFile "geometry/join80.stl";

//minCellSize 0.1e-3;
maxCellSize 5e-3;


//boundaryCellSize 0.1;

//checkForGluedMesh 0;

/*keepCellsIntersectingPatches
{
    "(container|plane|elec.*)"
    {
        KeepCells 0;
    }
}*/
/*edgeMeshRefinement
{
    cavity
    {
        edgeFile    "constant/triSurface/join.eMesh";
        cellSize    0.5e-3;
    }
}*/

/*localRefinement
{
    
    //"(container|elec.*)"
    container
    {
        cellSize  0.05e-3;
    }
}*/

objectRefinements
{

    cavity
    {
        type cone;
        cellSize 0.05e-3;
        p0  (0 0 -2e-3);
        p1  (0 0 3e-3);
        radius0  2e-3;
        radius1  2e-3;
        refinementThickness 0.5e-3;
    }

    cavity2
    {
        type cone;
        cellSize 0.1e-3;
        p0  (0 0 3e-3);
        p1  (0 0 6e-3);
        radius0  0.5e-3;
        radius1  1.0e-3;
        //refinementThickness 0e-3;
    }


    /*topCavityCone
    {
        type cone;
        cellSize 0.1e-3;
        p0  (0 0 3e-3);
        p1  (0 0 4e-3);
        radius0  2e-3;
        radius1  2e-3;
        refinementThickness 5e-3;
       
    }*/


    cone //semi aperture angle 20 deg
    {
        type cone;
        cellSize 0.2e-3;
        p0  (0 0 3e-3);
        p1  (0 0 35e-3);
        radius0  1.5e-3;
        radius1  7e-3;
        refinementThickness 4e-3;

    }
}

boundaryLayers
{
    //nLayers     0;

    patchBoundaryLayers
    {

        "(container)"
        {
             nLayers    7;
             thicknessRatio     1.1;
             allowDiscontinuity 1;
        }

        plane
       {   
           nLayers     7;
           thicknessRatio  1.1;
           allowDiscontinuity  1;
       }
    }

    optimiseLayer 1;

    optimisationParameters
    {
        nSmoothNormals      10;
        relThicknessTol     0.2;
        featureSizeFactor   0.3;
        reCalculateNormals  2;
        maxNumIterations    10;
    }
}

workflowControls
{
    //stopAfter edgeExtraction;
}
renameBoundary
{
    //defaultName     fixedWalls;
    defaultType     wall;

    newPatchNames
    {
        
        "outlet.*"
        {
            type    patch;
            newName outlet;
        }
        /*"(plane|container|elec.*)"
        {
            type    wall;
            newName wall;
        }*/
    }
}
// ************************************************************************* //
